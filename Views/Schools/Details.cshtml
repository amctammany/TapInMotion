@model TapInMotion.Models.School

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>School</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Longitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Latitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MapZoom)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MapZoom)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Alias)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Alias)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
    </dl>
</div>
<div class="card ">
    <div class="card-body row">

        <h3 class="card-title"> Campus Transport Map</h3>
        <div class="col-8">

            <div id="map"></div>
        </div>
        <div class="col-4">
            <h4>Stations</h4>
            <ul id="station-list" class="list-group">

                @foreach (var station in @Model?.Stations)
                {
                    <li data-id="@station.StationID" data-name="@station.Name" data-longitude="@station.Longitude"
                        data-latitude="@station.Latitude" data-bikecapacity="@station.BikeCapacity"
                        data-bikes="@station.AvailableVehicles.Where(s => s.Type == VehicleType.Bicycle).Count()"
                        data-skateboards="@station.AvailableVehicles.Where(s => s.Type == VehicleType.Skateboard).Count()"
                        data-scooters="@station.AvailableVehicles.Where(s => s.Type == VehicleType.Scooter).Count()"
                        data-scootercapacity="@station.ScooterCapacity"
                        data-skateboardcapacity="@station.SkateboardCapacity" class="station list-group-item">
                        @station.Name
                    </li>
                }
            </ul>
        </div>
    </div>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.SchoolID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<script defer>

    var map = L.map('map').setView([@Model?.Latitude, @Model?.Longitude], @Model?.MapZoom);
    var corner1 = L.latLng(30.278697899256557, -81.51387170205469),
        corner2 = L.latLng(30.26016519891817, -81.49516454082557),
        bounds = L.latLngBounds(corner1, corner2);
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        maxBounds: bounds,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);
    var stations = [];
    const stationElms = document.getElementsByClassName('station');
    console.log(stationElms)
    for (i in stationElms) {
        var e = stationElms[i];
        const station = e.dataset;
        console.log(e, station)
        if (station && station.name) {

            var marker = L.marker([station.latitude, station.longitude]).addTo(map);
            marker.bindPopup("<h6>" + station.name + "</h6><br />Bicycles: " + (station.bikes || 30) + "/" + (station.bikecapacity || 30)
                + "<hr />Skateboards: " + (station.skateboards || 20) + "/" + (station.skateboardcapacity || 30)
                + "<hr />Scooters: " + (station.scooters || 20) + "/" + (station.scootercapacity || 30)
            );
        }
    }


</script>